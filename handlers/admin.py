import subprocess
from aiogram import types, Dispatcher
from aiogram.filters import Command
from aiogram.enums.chat_member_status import ChatMemberStatus

# ‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞: —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–¥–º–∏–Ω–æ–º
async def is_admin(message: types.Message) -> bool:
    chat = message.chat
    user_id = message.from_user.id
    member = await message.bot.get_chat_member(chat.id, user_id)
    return member.status in {
        ChatMemberStatus.ADMINISTRATOR,
        ChatMemberStatus.OWNER
    }

# üîÑ –ö–æ–º–∞–Ω–¥–∞ /update ‚Äî —Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–æ–≤
async def update_bot(message: types.Message):
    if not await is_admin(message):
        return await message.reply("‚õî –¢–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã –º–æ–≥—É—Ç –≤—ã–ø–æ–ª–Ω—è—Ç—å –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ.")

    await message.reply("üîÑ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∏–∑ GitHub –∏ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫...")

    try:
        # –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∏–∑ GitHub
        subprocess.run(["git", "pull"], cwd="/bot_7dtd_tg", check=True)

        # –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ —á–µ—Ä–µ–∑ run_bot.sh
        subprocess.run(["bash", "run_bot.sh"], cwd="/bot_7dtd_tg", check=True)

        await message.reply("‚úÖ –ë–æ—Ç –æ–±–Ω–æ–≤–ª—ë–Ω –∏ –ø–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω.")
    except subprocess.CalledProcessError as e:
        await message.reply(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏: {e}")
    except Exception as e:
        await message.reply(f"‚ùå –ù–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω–∞—è –æ—à–∏–±–∫–∞: {e}")

# üìå –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è
def register_admin(dp: Dispatcher):
    dp.message.register(update_bot, Command("update"))
