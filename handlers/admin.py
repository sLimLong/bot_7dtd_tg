import subprocess
import os
from aiogram import types, Dispatcher
from aiogram.filters import Command

# ‚úÖ –°–ø–∏—Å–æ–∫ Telegram ID, –∫–æ—Ç–æ—Ä—ã–º —Ä–∞–∑—Ä–µ—à–µ–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ
ALLOWED_ADMINS = {
    297211090  # sLim
}

REPO_PATH = "/root/bot_7dtd_tg"
SERVICE_NAME = "bot_7dtd_tg.service"

# üîÑ –ö–æ–º–∞–Ω–¥–∞ /update ‚Äî —Ç–æ–ª—å–∫–æ –¥–ª—è —Ä–∞–∑—Ä–µ—à—ë–Ω–Ω—ã—Ö ID
async def update_bot(message: types.Message):
    user_id = message.from_user.id

    if user_id not in ALLOWED_ADMINS:
        return await message.reply("‚õî –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –Ω–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –±–æ—Ç–∞.")

    if not os.path.isdir(REPO_PATH):
        return await message.reply(f"‚ùå –ü—É—Ç—å –Ω–µ –Ω–∞–π–¥–µ–Ω: {REPO_PATH}")

    await message.reply("üîÑ –°–æ—Ö—Ä–∞–Ω—è—é –∏–∑–º–µ–Ω–µ–Ω–∏—è –∏ –æ–±–Ω–æ–≤–ª—è—é –∏–∑ GitHub...")

    try:
        # –ê–≤—Ç–æ-—Å—Ç—ç—à –ª–æ–∫–∞–ª—å–Ω—ã—Ö –∏–∑–º–µ–Ω–µ–Ω–∏–π
        subprocess.run(["git", "stash", "push", "-m", "Auto stash before update"], cwd=REPO_PATH, check=True)

        # –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∏–∑ GitHub
        subprocess.run(["git", "pull"], cwd=REPO_PATH, check=True)

        # –í–æ–∑–≤—Ä–∞—Ç –∏–∑–º–µ–Ω–µ–Ω–∏–π
        subprocess.run(["git", "stash", "pop"], cwd=REPO_PATH, check=True)

        # –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ systemd-—Å–µ—Ä–≤–∏—Å–∞
        subprocess.run(["systemctl", "restart", SERVICE_NAME], check=True)

        await message.reply("‚úÖ –ë–æ—Ç –æ–±–Ω–æ–≤–ª—ë–Ω –∏ –ø–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω.")
    except subprocess.CalledProcessError as e:
        await message.reply(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏:\n```\n{e}\n```", parse_mode="Markdown")
    except Exception as e:
        await message.reply(f"‚ùå –ù–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω–∞—è –æ—à–∏–±–∫–∞:\n```\n{e}\n```", parse_mode="Markdown")

# üìå –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è
def register_admin(dp: Dispatcher):
    dp.message.register(update_bot, Command("update"))
