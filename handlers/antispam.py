import asyncio
from aiogram import Dispatcher, F
from aiogram.types import Message
from aiogram.enums import ContentType
from collections import defaultdict

# –ü–∞–º—è—Ç—å
recent_texts = defaultdict(list)
recent_times = defaultdict(list)
recent_gifs = defaultdict(list)
recent_stickers = defaultdict(list)

# –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –∞–Ω—Ç–∏—Å–ø–∞–º–∞:

SPAM_WINDOW = 5  # ‚è±Ô∏è –í—Ä–µ–º–µ–Ω–Ω–æ–µ –æ–∫–Ω–æ (–≤ —Å–µ–∫—É–Ω–¥–∞—Ö), –≤ —Ç–µ—á–µ–Ω–∏–µ –∫–æ—Ç–æ—Ä–æ–≥–æ –æ—Ç—Å–ª–µ–∂–∏–≤–∞—é—Ç—Å—è –ø–æ–≤—Ç–æ—Ä–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
TEXT_REPEAT_THRESHOLD = 3  # üîÅ –ü–æ–≤—Ç–æ—Ä –æ–¥–Ω–æ–≥–æ –∏ —Ç–æ–≥–æ –∂–µ —Ç–µ–∫—Å—Ç–∞
TEXT_FLOOD_THRESHOLD = 5   # üí¨ –õ—é–±—ã—Ö —Ç–µ–∫—Å—Ç–æ–≤ –ø–æ–¥—Ä—è–¥
MIN_MESSAGE_LENGTH = 1     # üßπ –ò–≥–Ω–æ—Ä–∏—Ä–æ–≤–∞—Ç—å —Å–ª–∏—à–∫–æ–º –∫–æ—Ä–æ—Ç–∫–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è

GIF_REPEAT_THRESHOLD = 2   # üéûÔ∏è –û–¥–∏–Ω–∞–∫–æ–≤—ã—Ö –≥–∏—Ñ–æ–∫
GIF_TOTAL_THRESHOLD = 4    # üéûÔ∏è –õ—é–±—ã—Ö –≥–∏—Ñ–æ–∫ –ø–æ–¥—Ä—è–¥

STICKER_REPEAT_THRESHOLD = 2  # üßä –û–¥–∏–Ω–∞–∫–æ–≤—ã—Ö —Å—Ç–∏–∫–µ—Ä–æ–≤
STICKER_TOTAL_THRESHOLD = 4   # üßä –õ—é–±—ã—Ö —Å—Ç–∏–∫–µ—Ä–æ–≤ –ø–æ–¥—Ä—è–¥

def register_antispam(dp: Dispatcher):
    # üîÅ –ü–æ–≤—Ç–æ—Ä —Ç–µ–∫—Å—Ç–∞
    @dp.message(F.text)
    async def block_text_spam(message: Message):
        user_id = message.from_user.id
        text = message.text.strip().lower()
        now = asyncio.get_event_loop().time()

        if len(text) < MIN_MESSAGE_LENGTH:
            return

        recent_texts[user_id] = [
            (t, ts) for t, ts in recent_texts[user_id] if now - ts < SPAM_WINDOW
        ]
        recent_texts[user_id].append((text, now))

        repeats = sum(1 for t, _ in recent_texts[user_id] if t == text)
        if repeats >= TEXT_REPEAT_THRESHOLD:
            await message.delete()
            await message.answer(f"üîÅ {message.from_user.full_name}, –Ω–µ –ø–æ–≤—Ç–æ—Ä—è–π –æ–¥–Ω–æ –∏ —Ç–æ –∂–µ!")

        # ‚è±Ô∏è –ë—ã—Å—Ç—Ä—ã–π —Ñ–ª—É–¥ —Ä–∞–∑–Ω—ã–º–∏ —Ç–µ–∫—Å—Ç–∞–º–∏
        recent_times[user_id] = [
            ts for ts in recent_times[user_id] if now - ts < SPAM_WINDOW
        ]
        recent_times[user_id].append(now)

        if len(recent_times[user_id]) >= TEXT_FLOOD_THRESHOLD:
            await message.delete()
            await message.answer(f"‚è±Ô∏è {message.from_user.full_name}, —Å–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏–π –ø–æ–¥—Ä—è–¥!")

    # üéûÔ∏è –ì–∏—Ñ-—Å–ø–∞–º
    @dp.message(F.content_type == ContentType.ANIMATION)
    async def block_gif_spam(message: Message):
        user_id = message.from_user.id
        gif_id = message.animation.file_unique_id
        now = asyncio.get_event_loop().time()

        recent_gifs[user_id] = [
            (gid, ts) for gid, ts in recent_gifs[user_id] if now - ts < SPAM_WINDOW
        ]
        recent_gifs[user_id].append((gif_id, now))

        total = len(recent_gifs[user_id])
        same = sum(1 for gid, _ in recent_gifs[user_id] if gid == gif_id)

        if same >= GIF_REPEAT_THRESHOLD:
            await message.delete()
            await message.answer(f"üö´ {message.from_user.full_name}, –Ω–µ –ø–æ–≤—Ç–æ—Ä—è–π –æ–¥–Ω—É –∏ —Ç—É –∂–µ –≥–∏—Ñ–∫—É!")
        elif total >= GIF_TOTAL_THRESHOLD:
            await message.delete()
            await message.answer(f"‚ö†Ô∏è {message.from_user.full_name}, —Å–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ –≥–∏—Ñ–æ–∫ –ø–æ–¥—Ä—è–¥!")

    # üßä –°—Ç–∏–∫–µ—Ä-—Å–ø–∞–º
    @dp.message(F.content_type == ContentType.STICKER)
    async def block_sticker_spam(message: Message):
        user_id = message.from_user.id
        sticker_id = message.sticker.file_unique_id
        now = asyncio.get_event_loop().time()

        recent_stickers[user_id] = [
            (sid, ts) for sid, ts in recent_stickers[user_id] if now - ts < SPAM_WINDOW
        ]
        recent_stickers[user_id].append((sticker_id, now))

        total = len(recent_stickers[user_id])
        same = sum(1 for sid, _ in recent_stickers[user_id] if sid == sticker_id)

        if same >= STICKER_REPEAT_THRESHOLD:
            await message.delete()
            await message.answer(f"üö´ {message.from_user.full_name}, –Ω–µ –ø–æ–≤—Ç–æ—Ä—è–π –æ–¥–∏–Ω –∏ —Ç–æ—Ç –∂–µ —Å—Ç–∏–∫–µ—Ä!")
        elif total >= STICKER_TOTAL_THRESHOLD:
            await message.delete()
            await message.answer(f"‚ö†Ô∏è {message.from_user.full_name}, —Å–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ —Å—Ç–∏–∫–µ—Ä–æ–≤ –ø–æ–¥—Ä—è–¥!")
